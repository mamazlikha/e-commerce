# docker-compose.yml
version: "3.8"
services:
  mongo:
    image: mongo:5.0
    container_name: mongo
    networks:
      - e-commerce-network
    environment:
        - MONGO_INITDB_ROOT_USERNAME=root
        - MONGO_INITDB_ROOT_PASSWORD=password
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - ./database/db:/data/db
      - ./database/dev.archive:/Databases/dev.archive
      - ./database/production:/Databases/production
  itemservice:
    build:
      context: ./ItemsService
      dockerfile: Dockerfile
    container_name: itemservice
    restart: on-failure
    networks:
      - e-commerce-network
    depends_on:
      - mongo
    ports:
      - 8080:8080
    environment:
      - SPRING_APP_SERVER_PORT=8080
      - SPRING_DATA_MONGODB_DATABASE_AUTH=admin
      - SPRING_DATA_MONGODB_DATABASE_USERNAME=root
      - SPRING_DATA_MONGODB_PWD=password
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_HOST=mongo
      - MONGODB_HOST_HOST=mongo
      - MONGODB_PORT=27017

  userservice:
    build:
      context: ./userservice
      dockerfile: Dockerfile
    container_name: userservice
    restart: on-failure
    networks:
      - e-commerce-network
    depends_on:
      - mongo
    ports:
      - 8083:8083
    environment:
      - SPRING_APP_SERVER_PORT=8083
      - SPRING_DATA_MONGODB_DATABASE_AUTH=admin
      - SPRING_DATA_MONGODB_DATABASE_USERNAME=root
      - SPRING_DATA_MONGODB_PWD=password
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_HOST=mongo
      - MONGODB_HOST_HOST=mongo
      - MONGODB_PORT=27017


  catalogueservice:
    build:
      context: ./CatalogueService
      dockerfile: Dockerfile
    container_name: catalogueservice
    restart: on-failure
    networks:
      - e-commerce-network
    depends_on:
      - mongo
    ports:
      - 8084:8084
    environment:
      - SPRING_APP_SERVER_PORT=8084
      - SPRING_DATA_MONGODB_DATABASE_AUTH=admin
      - SPRING_DATA_MONGODB_DATABASE_USERNAME=root
      - SPRING_DATA_MONGODB_PWD=password
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_HOST=mongo
      - MONGODB_HOST_HOST=mongo
      - MONGODB_PORT=27017

  cartservice:
    build:
      context: ./CartService
      dockerfile: Dockerfile
    container_name: cartservice
    restart: on-failure
    networks:
      - e-commerce-network
    depends_on:
      - mongo
    ports:
      - 8082:8082
    environment:
      - SPRING_APP_SERVER_PORT=8082
      - SPRING_DATA_MONGODB_DATABASE_AUTH=admin
      - SPRING_DATA_MONGODB_DATABASE_USERNAME=root
      - SPRING_DATA_MONGODB_PWD=password
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_HOST=mongo
      - MONGODB_HOST_HOST=mongo
      - MONGODB_PORT=27017
      - ITEM_SERVICE_HOST=itemservice
      - ITEM_SERVICE_PORT=8080
networks:
  e-commerce-network:
    external: true
